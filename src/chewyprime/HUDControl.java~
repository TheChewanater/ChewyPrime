package chewyprime;

import com.jme3.asset.AssetManager;
import com.jme3.font.BitmapFont;
import com.jme3.font.BitmapText;
import com.jme3.font.Rectangle;
import com.jme3.renderer.Camera;
import com.jme3.renderer.RenderManager;
import com.jme3.renderer.ViewPort;
import com.jme3.scene.control.AbstractControl;
import com.jme3.scene.control.Control;
import com.jme3.scene.Spatial;
import com.jme3.scene.Node;
import com.jme3.texture.Texture2D;
import com.jme3.ui.Picture;
import com.jme3.math.*;

class HUDControl extends AbstractControl
{
  protected CharacterControl mCharacterControl = null;
  protected Camera mCamera;
  
  protected Node mContainer = new Node("container");
  protected BitmapText mText;
  protected Picture mBorder, mBackground;
  
  public HUDControl(AssetManager assetManager, Camera cam, Node gui)
  {
    mBorder = new Picture("Border");
    mBorder.setImage(assetManager, GUIConstants.BORDER_PATH, true);
    mContainer.attachChild(mBorder);
    
    mBackground = new Picture("Background");
    mBackground.setImage(assetManager, GUIConstants.BACKGROUND_PATH, true);
    mContainer.attachChild(mBackground);
    
    mText = new BitmapText(assetManager.loadFont(GUIConstants.FONT_PATH));
    mContainer.attachChild(mText);
    
    gui.attachChild(mContainer);
    
    mCamera = cam;
  }
  
  public void controlUpdate(float time)
  {
    if(spatial == null) return;
    
    chewyprime.rpg.Character character = mCharacterControl.getCharacter();
  }
  
  public void updateText()
  {
    int textSize = (int)(mCamera.getWidth() * GUIConstants.TEXT_SIZE);
    int boxWidth = (int)(mCamera.getWidth() * GUIConstants.BUTTON_WIDTH);
    int boxHeight = (int)(mCamera.getWidth() * GUIConstants.BUTTON_HEIGHT);
    int padding = (int)(mCamera.getWidth() * GUIConstants.PADDING);
    
    mBorder.setPosition(padding, padding);
    mBorder.setWidth(boxWidth);
    mBorder.setHeight(boxHeight);
    
    mBackground.setPosition(padding * 2, padding * 2);
    mBackground.setWidth(boxWidth - padding * 2);
    mBackground.setHeight(boxHeight - padding * 2);
    
    mText.setSize(textSize);
    mText.setColor(ColorRGBA.Black);
    mText.setText(mCharacterControl.getCharacter().getName());
    mText.setBox(new Rectangle(padding, padding + boxHeight, boxWidth, boxHeight));
    mText.setAlignment(BitmapFont.Align.Center);
    mText.setVerticalAlignment(BitmapFont.VAlign.Center);
  }
  
  public void controlRender(RenderManager rm, ViewPort vp)
  {
  }
  
  public void setSpatial(Spatial spatial)
  {
    super.setSpatial(spatial);
    
    mCharacterControl = spatial.getControl(CharacterControl.class);
    
    updateText();
  }
  
  public Control cloneForSpatial(Spatial spatial)
  {
    PlayerTextControl clone = new PlayerTextControl();
    clone.setSpatial(spatial);
    
    return clone;
  }
}

