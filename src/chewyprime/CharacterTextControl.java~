package chewyprime;

import com.jme3.asset.AssetManager;
import com.jme3.font.BitmapFont;
import com.jme3.font.BitmapText;
import com.jme3.font.Rectangle;
import com.jme3.renderer.Camera;
import com.jme3.renderer.RenderManager;
import com.jme3.renderer.ViewPort;
import com.jme3.scene.control.AbstractControl;
import com.jme3.scene.control.Control;
import com.jme3.scene.Spatial;
import com.jme3.scene.Node;
import com.jme3.texture.Texture2D;
import com.jme3.ui.Picture;
import com.jme3.math.*;

/**
 *  Creates a BitmapText object and tracks it to a character's spatial (RPG
 *  character, not letter character) 
 */
public class CharacterTextControl extends AbstractControl
{
  public final static String FONT_PATH = "Interface/Fonts/AndikaBasic.fnt";
  public final static String BORDER_PATH = "Interface/BorderBox.png";
  public final static String VITALITY_PATH = "Interface/VitalityBox.png";
  public final static String DAMAGE_PATH = "Interface/DamageBox.png";
  
  /* These are all relative to the width of the screen */
  public final static float TEXT_SIZE = 0.0125f;
  public final static float BOX_WIDTH = 0.15f;
  public final static float BOX_HEIGHT = 0.025f;
  public final static float BUTTON_WIDTH = 0.075f;
  public final static float BUTTON_HEIGHT = 0.025f;
  public final static float PADDING = 0.003125f;
  
  protected chewyprime.CharacterControl mCharacterControl = null;
  protected Camera mCamera;
  
  protected Node mContainer = new Node("Container");
  protected BitmapText mText;
  protected Picture mBorder, mVitality, mDamage;
  
  public CharacterTextControl(AssetManager assetManager, Camera cam, Node gui)
  {
    mBorder = new Picture("Border");
    mBorder.setImage(assetManager, BORDER_PATH, true);
    mContainer.attachChild(mBorder);
    
    mVitality = new Picture("Vitality");
    mVitality.setImage(assetManager, VITALITY_PATH, true);
    mContainer.attachChild(mVitality);
    
    mDamage = new Picture("Damage");
    mDamage.setImage(assetManager, DAMAGE_PATH, true);
    mContainer.attachChild(mDamage);
    
    mText = new BitmapText(assetManager.loadFont(FONT_PATH));
    mContainer.attachChild(mText);
    
    gui.attachChild(mContainer);
    
    mCamera = cam;
  }
  
  public void controlUpdate(float time)
  {
    if(spatial == null) return;
    
    chewyprime.rpg.Character character = mCharacterControl.getCharacter();
    
    /* Only display the text if the character is being displayed as well */
    spatial.getParent().updateGeometricState();
    if(spatial.checkCulling(mCamera))
      {
        mContainer.setCullHint(Spatial.CullHint.Never);
        
        int boxWidth = (int)(mCamera.getWidth() * BOX_WIDTH);
        int boxHeight = (int)(mCamera.getWidth() * BOX_HEIGHT);
        int padding = (int)(mCamera.getWidth() * PADDING);
        
        /* Get the position on the screen to display the text */
        Vector3f textPos = mCamera.getScreenCoordinates(spatial.getLocalTranslation().add(new Vector3f(0.0f, 2.0f, 0.0f)));
        Rectangle textBox = new Rectangle(textPos.x - boxWidth/2, textPos.y + boxHeight, boxWidth, 0);
        
        mBorder.setPosition(textBox.x, textBox.y - boxHeight);
        mBorder.setWidth(boxWidth);
        mBorder.setHeight(boxHeight);
        
        mText.setBox(textBox);
        mText.setAlignment(BitmapFont.Align.Center);
        
        /* Resize the vitality bar to show the percent of the character's
          remaining vitality.  The leftover space is filled by the damage bar. */
        float vitality = (float)character.getVitality() / character.getHitPoints();
        
        int totalWidth = boxWidth - padding*2;
        int vitalityWidth = (int)(totalWidth * vitality);
        int damageWidth = totalWidth - vitalityWidth;
        
        mVitality.setPosition(textBox.x + padding, textBox.y - boxHeight + padding);
        mVitality.setWidth(vitalityWidth);
        mVitality.setHeight(boxHeight - padding*2);
        
        mDamage.setPosition(textBox.x + padding + vitalityWidth, textBox.y - boxHeight + padding);
        mDamage.setWidth(damageWidth);
        mDamage.setHeight(boxHeight - padding*2);
      }
    else
      {
        mContainer.setCullHint(Spatial.CullHint.Always);
      }
  }
  
  public void updateText()
  {
    mText.setSize(mCamera.getWidth() * TEXT_SIZE);
    mText.setText(mCharacterControl.getCharacter().getName());
  }
  
  public void controlRender(RenderManager rm, ViewPort vp)
  {
  }
  
  public void setSpatial(Spatial spatial)
  {
    super.setSpatial(spatial);
    
    mCharacterControl = spatial.getControl(chewyprime.CharacterControl.class);
    
    updateText();
  }
  
  public Control cloneForSpatial(Spatial spatial)
  {
    return null;
  }
}

