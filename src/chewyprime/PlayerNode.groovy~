package chewyprime

import com.jme3.scene.control.CameraControl
import com.jme3.renderer.Camera
import com.jme3.scene.*
import com.jme3.input.*
import com.jme3.input.controls.*
import com.jme3.math.*

/* Encapsulates a camera and updates its position with a camera control,
  similar to scene.CameraNode, but with custom controls for moving the
  camera. */
class ChewyCameraNode extends Node
{
  private mControl
  private mTarget
  
  private static TARGET_OFFSET = new Vector3f(0, 2, 0)
  private static MIN_DISTANCE = 2.0f
  private static MAX_DISTANCE = 6.0f
  private static MIN_HEIGHT = -1.0f
  private static MAX_HEIGHT = 5.0f
  
  public ChewyCameraNode(String name, Camera cam, Spatial target)
  {
    super(name);
    
    mTarget = target
    
    mControl = new CameraControl(cam, CameraControl.ControlDirection.SpatialToCamera)
    addControl(mControl)
  }
  
  public void updateLogicalState(float time)
  {
    super.updateLogicalState(time);
    
    Vector3f targetPosition = mTarget.getLocalTranslation().add(TARGET_OFFSET)
    Vector3f fromTarget = targetPosition.negate().add(getLocalTranslation());
    
    if(fromTarget.y > MAX_HEIGHT)
      fromTarget.y = MAX_HEIGHT;
    else if(fromTarget.y < MIN_HEIGHT)
      fromTarget.y = MIN_HEIGHT;
    
    def distance = fromTarget.length()
    
    if(distance > MAX_DISTANCE)
      fromTarget.normalizeLocal().multLocal(MAX_DISTANCE);
    else if(distance < MIN_DISTANCE)
      fromTarget.normalizeLocal().multLocal(MIN_DISTANCE);
    
    setLocalTranslation(targetPosition.add(fromTarget));
    lookAt(targetPosition, Vector3f.UNIT_Y);
  }
}

